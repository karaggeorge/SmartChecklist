<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" " http://www.springframework.org/dtd/spring-beans.dtd"> 
<beans>
	<bean id="destination" class="java.lang.String">
		<!-- the cluster topic name for client2server communication	-->
		<constructor-arg value="jws_cloud1"/>
	</bean>
	<bean id="nodeDescription" class="java.lang.String">
		<!-- the current cluster node description for administrative description -->
		<constructor-arg value="jWebSocket Server Node"/>
	</bean>

	<!-- the JMSEngine ActiveMQ connection factory	-->
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="failover:(tcp://0.0.0.0:61616)" />
		<property name="useAsyncSend" value="true" />
		<property name="userName">
			<value>jws_cloud1</value>
		</property>
		<property name="password">
			<value>password</value>
		</property>
	</bean>

	<!-- the MongoDB server connection instance 
	<bean id="mongodbConnection" class="com.mongodb.MongoClient" destroy-method="close">
		<constructor-arg value="localhost"/>
	</bean>
	-->

	<!-- the MongoDB database instance to store the load balancer data -->
	<bean id="loadBalancerDatabase" class="org.jwebsocket.storage.mongodb.MongoDBUtils" factory-method="getDB">
		<constructor-arg ref="mongodbConnection0"/>
		<constructor-arg ref="destination"/>
		<!-- database user/password for authentication if required
		<constructor-arg value="user"/>
		<constructor-arg value="pass"/>
		-->
	</bean>

	<!-- the cluster 'connectorsManager' instance for client connections management -->
	<bean id="connectorsManager" class="org.jwebsocket.jms.mongodb.MongoDBConnectorsManager">
		<property name="collection">
			<bean factory-bean="loadBalancerDatabase" factory-method="getCollection">
				<constructor-arg value="connectors"/>
			</bean>
		</property>
	</bean>
	
	<!-- the cluster 'nodesManager' instance for server nodes management -->
	<bean id="nodesManager" class="org.jwebsocket.jms.mongodb.MongoDBNodesManager">
		<property name="collection">
			<bean factory-bean="loadBalancerDatabase" factory-method="getCollection">
				<constructor-arg value="nodes"/>
			</bean>
		</property>
		<property name="nodeDescription" ref="nodeDescription"></property>
		<!-- the cluster 'synchronizer' instance for nodes processes synchronization -->
		<property name="synchronizer" ref="clusterSynchronizer" />
		<!-- utility temporary storage to access consumers information -->
		<property name="consumerAdviceTempStorage">
			<bean class="org.jwebsocket.jms.mongodb.MongoDBConsumerAdviceTempStorage" init-method="initialize">
				<property name="collection">
					<bean factory-bean="loadBalancerDatabase" factory-method="getCollection">
						<constructor-arg value="consumerinfo_temp_storage" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<!-- the cluster 'synchronizer' instance for nodes processes synchronization -->
	<bean id="clusterSynchronizer" class="org.jwebsocket.jms.mongodb.MongoDBClusterSynchronizer" init-method="initialize">
		<property name="collection">
			<bean factory-bean="loadBalancerDatabase" factory-method="getCollection">
				<constructor-arg value="synchronizer"/>
			</bean>
		</property>
	</bean>
</beans>
